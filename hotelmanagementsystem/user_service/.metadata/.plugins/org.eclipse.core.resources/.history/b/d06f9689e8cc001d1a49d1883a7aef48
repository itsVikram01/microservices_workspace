package com.user.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.user.entity.User;
import com.user.service.UserService;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;

@RestController
@RequestMapping("/user")
public class UserController {

	@Autowired
	private UserService userService;
	
	//create
	/*
	@PostMapping("/createUser")
	public User createUser(@RequestBody User user) throws Exception {
		return userService.createUser(user);
	}
	*/
	@PostMapping("/createUser")
	public ResponseEntity<User> createUser(@RequestBody User user) throws Exception {
		User createdUser = userService.createUser(user);
		return ResponseEntity.status(HttpStatus.CREATED).body(createdUser);
	}

	//all user get
	@GetMapping("/getAllUser")
	public ResponseEntity<List<User>> getAllUser() {
		List<User> allUsers = userService.getAllUsers();
		return ResponseEntity.ok(allUsers);
	}
	
	//single user get
	@GetMapping("/getUser/{userId}")
	@CircuitBreaker(name = "userCircuitBreaker")
	public User getUserByUserId(@PathVariable String userId) {
		//User userById = userService.getUserByUserId(userId);
		return userService.getUserByUserId(userId);
	} 
	
}
