package com.user.service;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.user.common.ResourceNotFoundException;
import com.user.entity.Hotel;
import com.user.entity.Rating;
import com.user.entity.User;
import com.user.repository.UserRepository;

@Service
public class UserServiceImpl implements UserService {

	// user operation
	@Autowired
	public UserRepository userRepository;
	
	// restTemplate for communicating services
	@Autowired
	private RestTemplate restTemplate;
	
	@Autowired
	private HotelService hotelService;
	
	private Logger logger=LoggerFactory.getLogger(UserServiceImpl.class);

	// create
	@Override
	public User createUser(User user) {
		//String randomUserId=UUID.randomUUID().toString();
		//user.setUserId(randomUserId);
		return userRepository.save(user);
	}

	@Override
	public List<User> getAllUsers() {
		List<User> users = userRepository.findAll();
		return users;
	}

	@Override
	public User getUserByUserId(String userId) {
		
		//get user from db using repository
		User user = userRepository.findById(userId)
				.orElseThrow(() -> new ResourceNotFoundException("User with given id is not found...!!"+userId));
		
		// fetch rating of the above user from RATING-SERVICE
		// http://localhost:8012/rating/user/101
		// to use name instead of localhost:8012 use @LoadBalanced on restTemplate bean
		Rating[] ratingsArrayOfUser = restTemplate.getForObject("http://RATING-SERVICE/rating/user/"+user.getUserId(), Rating[].class);
		List<Rating> ratingList = Arrays.stream(ratingsArrayOfUser).toList();
		
		//fetch hotel rating 
		List<Rating> ratingOfHotel = ratingList.stream().map(rating -> {
			//api call to hotel service to get the hotel
			// http://localhost:8011/hotel/getHotel/1
			ResponseEntity<Hotel> forEntity = restTemplate.getForEntity("http://HOTEL-SERVICE/hotel/getHotel/"+rating.getHotelId(), Hotel.class);
			Hotel hotel = forEntity.getBody();
			logger.info("response status code: {} ", forEntity.getStatusCode());
			
			//set the hotel to rating
			rating.setHotel(hotel);
			
			//return the rating
			return rating;
		}).collect(Collectors.toList());
		
		user.setRatings(ratingOfHotel);
		return user;
	}

}
